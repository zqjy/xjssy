# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2019-04-09 08:58
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Carimageinfo',
            fields=[
                ('status', models.IntegerField(blank=True, db_column='Status', null=True, verbose_name='状态')),
                ('adduser', models.IntegerField(blank=True, db_column='AddUser', null=True, verbose_name='添加人员')),
                ('addtime', models.DateTimeField(db_column='AddTime', verbose_name='添加时间')),
                ('lastedituser', models.IntegerField(blank=True, db_column='LastEditUser', null=True, verbose_name='最后修改用户')),
                ('lastedittime', models.DateTimeField(db_column='LastEditTime', verbose_name='最后修改时间')),
                ('carimageid', models.IntegerField(db_column='CarImageId', primary_key=True, serialize=False, verbose_name='车辆图片id')),
                ('carid', models.IntegerField(blank=True, db_column='CarId', null=True, verbose_name='车辆id')),
                ('imageurl', models.CharField(blank=True, db_column='ImageUrl', max_length=100, null=True, verbose_name='车辆图片链接')),
                ('iscover', models.IntegerField(blank=True, db_column='IsCover', null=True, verbose_name='是否封面')),
            ],
            options={
                'verbose_name_plural': '车辆图片信息',
                'db_table': 'm_carimageinfo',
                'verbose_name': '车辆图片信息',
            },
        ),
        migrations.CreateModel(
            name='Carinfo',
            fields=[
                ('status', models.IntegerField(blank=True, db_column='Status', null=True, verbose_name='状态')),
                ('adduser', models.IntegerField(blank=True, db_column='AddUser', null=True, verbose_name='添加人员')),
                ('addtime', models.DateTimeField(db_column='AddTime', verbose_name='添加时间')),
                ('lastedituser', models.IntegerField(blank=True, db_column='LastEditUser', null=True, verbose_name='最后修改用户')),
                ('lastedittime', models.DateTimeField(db_column='LastEditTime', verbose_name='最后修改时间')),
                ('carid', models.IntegerField(db_column='CarId', primary_key=True, serialize=False, verbose_name='车辆id')),
                ('carname', models.CharField(blank=True, db_column='CarName', max_length=50, null=True, verbose_name='车辆名称')),
                ('sort', models.IntegerField(blank=True, db_column='Sort', null=True, verbose_name='排序号')),
                ('imageurl', models.CharField(blank=True, db_column='ImageUrl', max_length=100, null=True, verbose_name='图片链接')),
                ('load', models.CharField(blank=True, db_column='Load', max_length=30, null=True, verbose_name='重量')),
                ('lengthwidthheight', models.CharField(blank=True, db_column='LengthWidthHeight', max_length=30, null=True, verbose_name='规格')),
                ('cargovolume', models.CharField(blank=True, db_column='CargoVolume', max_length=30, null=True, verbose_name='货量')),
                ('tips', models.CharField(blank=True, db_column='Tips', max_length=255, null=True, verbose_name='说明')),
                ('fixprice', models.FloatField(blank=True, db_column='FixPrice', null=True, verbose_name='固定价格')),
                ('cartype', models.IntegerField(blank=True, db_column='CarType', null=True, verbose_name='车辆类型')),
            ],
            options={
                'verbose_name_plural': '车辆信息',
                'db_table': 'm_carinfo',
                'verbose_name': '车辆信息',
            },
        ),
    ]
